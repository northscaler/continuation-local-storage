{
  "name": "@northscaler/continuation-local-storage",
  "version": "3.2.5-rc.0",
  "description": "Local storage for asynchronous Node.js call stacks, similar to thread-local storage in multithreaded platforms",
  "repository": {
    "type": "git",
    "url": "https://gitlab.com/northscaler-public/continuation-local-storage.git"
  },
  "keywords": [
    "continuation-local-storage",
    "thread-local-storage",
    "context"
  ],
  "license": "MIT",
  "engines": {
    "node": ">=8.17.0"
  },
  "scripts": {
    "build": "npm install && npm test",
    "transpile": "run-s transpile-main transpile-test",
    "clean": "rimraf dist docs coverage .nyc_output",
    "prenuke": "npm run clean",
    "nuke": "rimraf node_modules",
    "transpile-main": "babel --delete-dir-on-start --verbose --out-dir dist/main --copy-files src/main",
    "transpile-test": "babel --delete-dir-on-start --verbose --out-dir dist/test --copy-files src/test",
    "unit-integration": "run-s unit-integration-cls-hooked unit-integration-zonejs unit-integration-als",
    "unit-integration-cls-hooked": "nyc -x 'dist/test' -t .nyc_output/cls-hooked --exclude-after-remap false mocha 'dist/test/unit/**/*.spec.js' 'dist/test/integration/context/cls-hooked/**/*.spec.js'",
    "unit-integration-zonejs": "nyc -x 'dist/test' -t .nyc_output/zonejs --exclude-after-remap false mocha 'dist/test/unit/**/*.spec.js' 'dist/test/integration/context/zonejs/**/*.spec.js'",
    "unit-integration-als": "nyc -x 'dist/test' -t .nyc_output/als --exclude-after-remap false mocha 'dist/test/unit/**/*.spec.js' 'dist/test/integration/context/als/**/*.spec.js'",
    "postunit-integration": "run-s report",
    "integration": "nyc -x 'dist/test' --exclude-after-remap false mocha 'dist/test/integration/**/*.spec.js'",
    "postintegration": "run-s report",
    "i": "mocha 'src/test/integration/**/*.spec.js'",
    "unit": "nyc -x 'dist/test' --exclude-after-remap false mocha 'dist/test/unit/**/*.spec.js'",
    "postunit": "run-s report",
    "u": "mocha 'src/test/unit/**/*.spec.js'",
    "test": "run-s transpile unit-integration lint",
    "report": "run-s report-cls-hooked report-zonejs report-als",
    "report-cls-hooked": "nyc report --reporter=html --report-dir coverage/cls-hooked -t .nyc_output/cls-hooked",
    "report-zonejs": "nyc report --reporter=html --report-dir coverage/zonejs -t .nyc_output/zonejs",
    "report-als": "nyc report --reporter=html --report-dir coverage/als -t .nyc_output/als",
    "cov-cls-hooked": "open coverage/cls-hooked/index.html",
    "cov-zonejs": "open coverage/zonejs/index.html",
    "cov-als": "open coverage/als/index.html",
    "lint": "standard --verbose 'src/**/*.js'",
    "format": "standard --fix 'src/**/*.js'",
    "make-distribution": "run-s transpile doc lic",
    "doc": "jsdoc --verbose -d docs -r -c jsdoc.json -R README.md src/main",
    "lic": "node lic.js > LICENSE"
  },
  "files": [
    "dist/",
    "docs/",
    "src/",
    "index.js"
  ],
  "publishConfig": {
    "access": "public"
  },
  "peerDependencies": {
    "cls-hooked": ">=4.2.2",
    "zone.js": ">=0.10.3"
  },
  "dependencies": {
    "@babel/polyfill": "7.12.1"
  },
  "devDependencies": {
    "@babel/cli": "7.12.1",
    "@babel/core": "7.12.3",
    "@babel/plugin-proposal-optional-chaining": "7.12.1",
    "@babel/preset-env": "7.12.1",
    "@babel/register": "7.12.1",
    "@babel/traverse": "7.12.5",
    "@babel/types": "7.12.6",
    "acorn": "8.0.4",
    "babel-eslint": "10.1.0",
    "chai": "4.2.0",
    "cls-hooked": "4.2.2",
    "copyfiles": "2.4.0",
    "dirty-chai": "2.0.1",
    "jsdoc": "3.6.6",
    "lodash.template": "4.5.0",
    "mocha": "8.2.1",
    "npm-cli-login": "0.1.1",
    "npm-run-all": "4.1.5",
    "nyc": "15.1.0",
    "standard": "16.0.2",
    "zone.js": "0.11.3"
  },
  "babel": {
    "sourceMaps": "both",
    "presets": [
      [
        "@babel/preset-env",
        {
          "targets": {
            "node": true
          }
        }
      ]
    ],
    "plugins": [
      [
        "@babel/plugin-proposal-optional-chaining",
        {
          "loose": false
        }
      ]
    ]
  },
  "standard": {
    "parser": "babel-eslint"
  },
  "mocha": {
    "colors": true,
    "require": "@babel/register"
  }
}
